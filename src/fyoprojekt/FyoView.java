/*
 * FyoView.java
 */

package fyoprojekt;

import org.jdesktop.application.Action;
import org.jdesktop.application.ResourceMap;
import org.jdesktop.application.SingleFrameApplication;
import org.jdesktop.application.FrameView;
import org.jdesktop.application.TaskMonitor;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.util.ArrayList;
import javax.swing.Timer;
import javax.swing.Icon;
import javax.swing.JDialog;
import javax.swing.JFrame;
import javax.swing.JLabel;

/**
 * The application's main frame.
 */
public class FyoView extends FrameView {

    public FyoView(SingleFrameApplication app) {
        super(app);

        initComponents();
        
        /*ArrayList<Element> elems = new ArrayList<Element>(){{
            add(new LineElement(new Point(0.1, 0.1), new Point(0.2, 0.9), 0.3));
            add(new LineElement(new Point(0.2, 0.9), new Point(0.9, 0.8), 0.3));
            add(new LineElement(new Point(0.9, 0.8), new Point(0.8, 0.2), 0.3));
            add(new LineElement(new Point(0.8, 0.2), new Point(0.1, 0.1), 0.3));
            add(new OvalElement(new Point(0.5, 0.5), 0.2, 0.4 , Math.PI * 1.75, Math.PI * 0.25, 0.8));
        }};*/
        resetHubble();
        resetWebb();
        
        telescopeCanvas1.addMouseMotionListener(new MouseAdapter() {
            @Override
            public void mouseDragged(MouseEvent e) {   
                telescopeCanvas1.setRaySource(e.getX(), e.getY());
            }
        });
        telescopeCanvas1.setRaySource(new Point(-0.1, 0.6));
        
        telescopeCanvas3.addMouseMotionListener(new MouseAdapter() {
            @Override
            public void mouseDragged(MouseEvent e) {
                telescopeCanvas3.setRaySource(e.getX(), e.getY());
            }
        });
        telescopeCanvas3.setRaySource(new Point(0.1, 0.5));
        
    }

    @Action
    public void showAboutBox() {
        if (aboutBox == null) {
            JFrame mainFrame = FyoApp.getApplication().getMainFrame();
            aboutBox = new FyoAboutBox(mainFrame);
            aboutBox.setLocationRelativeTo(mainFrame);
        }
        FyoApp.getApplication().show(aboutBox);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        mainPanel = new javax.swing.JPanel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jSplitPane2 = new javax.swing.JSplitPane();
        jPanel3 = new javax.swing.JPanel();
        telescopeCanvas3 = new fyoprojekt.TelescopeCanvas();
        jSplitPane1 = new javax.swing.JSplitPane();
        telescopeCanvas1 = new fyoprojekt.TelescopeCanvas();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        hPrimaryAValue = new javax.swing.JSlider();
        jLabel2 = new javax.swing.JLabel();
        hPrimaryBValue = new javax.swing.JSlider();
        jLabel3 = new javax.swing.JLabel();
        hPrimaryA = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        hPrimaryB = new javax.swing.JLabel();
        hPrimaryEccentricity = new javax.swing.JLabel();
        hPrimaryRadius = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        hSecondaryA = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        hSecondaryB = new javax.swing.JLabel();
        hSecondaryAValue = new javax.swing.JSlider();
        hSecondaryBValue = new javax.swing.JSlider();
        hOffsetValue = new javax.swing.JSlider();
        jLabel13 = new javax.swing.JLabel();
        hOffset = new javax.swing.JLabel();
        hSecondaryEccentricity = new javax.swing.JLabel();
        hSecondaryRadius = new javax.swing.JLabel();
        menuBar = new javax.swing.JMenuBar();
        javax.swing.JMenu fileMenu = new javax.swing.JMenu();
        javax.swing.JMenuItem exitMenuItem = new javax.swing.JMenuItem();

        mainPanel.setName("mainPanel"); // NOI18N
        mainPanel.setLayout(new javax.swing.BoxLayout(mainPanel, javax.swing.BoxLayout.LINE_AXIS));

        jTabbedPane1.setName("jTabbedPane1"); // NOI18N

        jSplitPane2.setDividerLocation(100);
        jSplitPane2.setDividerSize(5);
        jSplitPane2.setResizeWeight(1.0);
        jSplitPane2.setName("jSplitPane2"); // NOI18N

        jPanel3.setName("jPanel3"); // NOI18N

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 99, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 433, Short.MAX_VALUE)
        );

        jSplitPane2.setLeftComponent(jPanel3);

        telescopeCanvas3.setName("telescopeCanvas3"); // NOI18N

        javax.swing.GroupLayout telescopeCanvas3Layout = new javax.swing.GroupLayout(telescopeCanvas3);
        telescopeCanvas3.setLayout(telescopeCanvas3Layout);
        telescopeCanvas3Layout.setHorizontalGroup(
            telescopeCanvas3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        telescopeCanvas3Layout.setVerticalGroup(
            telescopeCanvas3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 433, Short.MAX_VALUE)
        );

        jSplitPane2.setRightComponent(telescopeCanvas3);

        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(fyoprojekt.FyoApp.class).getContext().getResourceMap(FyoView.class);
        jTabbedPane1.addTab(resourceMap.getString("jSplitPane2.TabConstraints.tabTitle"), jSplitPane2); // NOI18N

        jSplitPane1.setDividerLocation(300);
        jSplitPane1.setDividerSize(5);
        jSplitPane1.setName("jSplitPane1"); // NOI18N

        telescopeCanvas1.setName("telescopeCanvas1"); // NOI18N

        javax.swing.GroupLayout telescopeCanvas1Layout = new javax.swing.GroupLayout(telescopeCanvas1);
        telescopeCanvas1.setLayout(telescopeCanvas1Layout);
        telescopeCanvas1Layout.setHorizontalGroup(
            telescopeCanvas1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        telescopeCanvas1Layout.setVerticalGroup(
            telescopeCanvas1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 433, Short.MAX_VALUE)
        );

        jSplitPane1.setRightComponent(telescopeCanvas1);

        jPanel1.setName("jPanel1"); // NOI18N
        jPanel1.setLayout(new java.awt.GridBagLayout());

        jLabel1.setText(resourceMap.getString("jLabel1.text")); // NOI18N
        jLabel1.setName("jLabel1"); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        jPanel1.add(jLabel1, gridBagConstraints);

        hPrimaryAValue.setMaximum(5000);
        hPrimaryAValue.setMinimum(100);
        hPrimaryAValue.setPaintLabels(true);
        hPrimaryAValue.setValue(3998);
        hPrimaryAValue.setName("hPrimaryAValue"); // NOI18N
        hPrimaryAValue.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                hubbleSliderStateChanged(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 0.1;
        jPanel1.add(hPrimaryAValue, gridBagConstraints);

        jLabel2.setText(resourceMap.getString("jLabel2.text")); // NOI18N
        jLabel2.setName("jLabel2"); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        jPanel1.add(jLabel2, gridBagConstraints);

        hPrimaryBValue.setMajorTickSpacing(100);
        hPrimaryBValue.setMaximum(5000);
        hPrimaryBValue.setMinorTickSpacing(10);
        hPrimaryBValue.setValue(3313);
        hPrimaryBValue.setName("hPrimaryBValue"); // NOI18N
        hPrimaryBValue.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                hubbleSliderStateChanged(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 0.1;
        jPanel1.add(hPrimaryBValue, gridBagConstraints);

        jLabel3.setText(resourceMap.getString("jLabel3.text")); // NOI18N
        jLabel3.setName("jLabel3"); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.insets = new java.awt.Insets(5, 0, 5, 0);
        jPanel1.add(jLabel3, gridBagConstraints);

        hPrimaryA.setText(resourceMap.getString("hPrimaryA.text")); // NOI18N
        hPrimaryA.setName("hPrimaryA"); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        jPanel1.add(hPrimaryA, gridBagConstraints);

        jPanel2.setName("jPanel2"); // NOI18N

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 22;
        gridBagConstraints.weighty = 0.1;
        jPanel1.add(jPanel2, gridBagConstraints);

        hPrimaryB.setText(resourceMap.getString("hPrimaryB.text")); // NOI18N
        hPrimaryB.setName("hPrimaryB"); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        jPanel1.add(hPrimaryB, gridBagConstraints);

        hPrimaryEccentricity.setText(resourceMap.getString("hPrimaryEccentricity.text")); // NOI18N
        hPrimaryEccentricity.setName("hPrimaryEccentricity"); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        jPanel1.add(hPrimaryEccentricity, gridBagConstraints);

        hPrimaryRadius.setText(resourceMap.getString("hPrimaryRadius.text")); // NOI18N
        hPrimaryRadius.setName("hPrimaryRadius"); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        jPanel1.add(hPrimaryRadius, gridBagConstraints);

        jLabel8.setText(resourceMap.getString("jLabel8.text")); // NOI18N
        jLabel8.setName("jLabel8"); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.insets = new java.awt.Insets(5, 0, 5, 0);
        jPanel1.add(jLabel8, gridBagConstraints);

        jLabel9.setText(resourceMap.getString("jLabel9.text")); // NOI18N
        jLabel9.setName("jLabel9"); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        jPanel1.add(jLabel9, gridBagConstraints);

        hSecondaryA.setText(resourceMap.getString("hSecondaryA.text")); // NOI18N
        hSecondaryA.setName("hSecondaryA"); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 9;
        jPanel1.add(hSecondaryA, gridBagConstraints);

        jLabel11.setText(resourceMap.getString("jLabel11.text")); // NOI18N
        jLabel11.setName("jLabel11"); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 10;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        jPanel1.add(jLabel11, gridBagConstraints);

        hSecondaryB.setText(resourceMap.getString("hSecondaryB.text")); // NOI18N
        hSecondaryB.setName("hSecondaryB"); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 11;
        jPanel1.add(hSecondaryB, gridBagConstraints);

        hSecondaryAValue.setMaximum(2000);
        hSecondaryAValue.setMinimum(100);
        hSecondaryAValue.setValue(722);
        hSecondaryAValue.setName("hSecondaryAValue"); // NOI18N
        hSecondaryAValue.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                hubbleSliderStateChanged(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 9;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        jPanel1.add(hSecondaryAValue, gridBagConstraints);

        hSecondaryBValue.setMaximum(5000);
        hSecondaryBValue.setMinimum(100);
        hSecondaryBValue.setValue(522);
        hSecondaryBValue.setName("hSecondaryBValue"); // NOI18N
        hSecondaryBValue.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                hubbleSliderStateChanged(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 11;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        jPanel1.add(hSecondaryBValue, gridBagConstraints);

        hOffsetValue.setMaximum(500);
        hOffsetValue.setMinimum(-500);
        hOffsetValue.setValue(-47);
        hOffsetValue.setName("hOffsetValue"); // NOI18N
        hOffsetValue.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                hubbleSliderStateChanged(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 15;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        jPanel1.add(hOffsetValue, gridBagConstraints);

        jLabel13.setText(resourceMap.getString("jLabel13.text")); // NOI18N
        jLabel13.setName("jLabel13"); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 14;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        jPanel1.add(jLabel13, gridBagConstraints);

        hOffset.setText(resourceMap.getString("hOffset.text")); // NOI18N
        hOffset.setName("hOffset"); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 15;
        jPanel1.add(hOffset, gridBagConstraints);

        hSecondaryEccentricity.setText(resourceMap.getString("hSecondaryEccentricity.text")); // NOI18N
        hSecondaryEccentricity.setName("hSecondaryEccentricity"); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 12;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        jPanel1.add(hSecondaryEccentricity, gridBagConstraints);

        hSecondaryRadius.setText(resourceMap.getString("hSecondaryRadius.text")); // NOI18N
        hSecondaryRadius.setName("hSecondaryRadius"); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 13;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        jPanel1.add(hSecondaryRadius, gridBagConstraints);

        jSplitPane1.setLeftComponent(jPanel1);

        jTabbedPane1.addTab(resourceMap.getString("jSplitPane1.TabConstraints.tabTitle"), jSplitPane1); // NOI18N

        mainPanel.add(jTabbedPane1);
        jTabbedPane1.getAccessibleContext().setAccessibleName(resourceMap.getString("jTabbedPane1.AccessibleContext.accessibleName")); // NOI18N

        menuBar.setName("menuBar"); // NOI18N

        fileMenu.setText(resourceMap.getString("fileMenu.text")); // NOI18N
        fileMenu.setName("fileMenu"); // NOI18N

        javax.swing.ActionMap actionMap = org.jdesktop.application.Application.getInstance(fyoprojekt.FyoApp.class).getContext().getActionMap(FyoView.class, this);
        exitMenuItem.setAction(actionMap.get("quit")); // NOI18N
        exitMenuItem.setName("exitMenuItem"); // NOI18N
        fileMenu.add(exitMenuItem);

        menuBar.add(fileMenu);

        setComponent(mainPanel);
        setMenuBar(menuBar);
    }// </editor-fold>//GEN-END:initComponents

    private void hubbleSliderStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_hubbleSliderStateChanged
        resetHubble();
    }//GEN-LAST:event_hubbleSliderStateChanged

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel hOffset;
    private javax.swing.JSlider hOffsetValue;
    private javax.swing.JLabel hPrimaryA;
    private javax.swing.JSlider hPrimaryAValue;
    private javax.swing.JLabel hPrimaryB;
    private javax.swing.JSlider hPrimaryBValue;
    private javax.swing.JLabel hPrimaryEccentricity;
    private javax.swing.JLabel hPrimaryRadius;
    private javax.swing.JLabel hSecondaryA;
    private javax.swing.JSlider hSecondaryAValue;
    private javax.swing.JLabel hSecondaryB;
    private javax.swing.JSlider hSecondaryBValue;
    private javax.swing.JLabel hSecondaryEccentricity;
    private javax.swing.JLabel hSecondaryRadius;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JSplitPane jSplitPane1;
    private javax.swing.JSplitPane jSplitPane2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JPanel mainPanel;
    private javax.swing.JMenuBar menuBar;
    private fyoprojekt.TelescopeCanvas telescopeCanvas1;
    private fyoprojekt.TelescopeCanvas telescopeCanvas3;
    // End of variables declaration//GEN-END:variables


    private JDialog aboutBox;
    
    void resetHubble()
    {
        telescopeCanvas1.setElems(constructHubble());
    }
    
    void resetWebb()
    {
        telescopeCanvas3.setElems(constructWebb());
    }
    
    private ArrayList<Element> constructHubble()
    {
        final double paValue = hPrimaryAValue.getValue() * 0.001;
        final double pbValue = hPrimaryBValue.getValue() * 0.001;
        final double saValue = hSecondaryAValue.getValue() * 0.001;
        final double sbValue = hSecondaryBValue.getValue() * 0.001;
        
        fillMirrorLabels(paValue, pbValue, hPrimaryA, hPrimaryB, hPrimaryEccentricity, hPrimaryRadius);
        fillMirrorLabels(saValue, sbValue, hSecondaryA, hSecondaryB, hSecondaryEccentricity, hSecondaryRadius);
        
        final double sOffset = hOffsetValue.getValue() * 0.001;
        hOffset.setText(String.format("%.3f m", sOffset));
        
        final double hullLightMult = 0.1;
        final ElementFactory f = new ElementFactory(1.0, 0.0, 14.0, 7.0);
        
        ArrayList<Element> list = new ArrayList<Element>(){{
            add(f.line(0.0, 2.0, 8.0, 2.0, hullLightMult));
            add(f.line(0.0, 5.0, 8.0, 5.0, hullLightMult));
            
            add(f.line(8.0, 2.0, 8.0, 0.7, hullLightMult));
            add(f.line(8.0, 5.0, 8.0, 6.3, hullLightMult));
            
            add(f.line(8.0, 0.7, 12.7, 0.7, hullLightMult));
            add(f.line(8.0, 6.3, 12.7, 6.3, hullLightMult));
            
            add(f.line(12.7, 0.7, 12.7, 6.3, hullLightMult));
            
            add(f.hyperbola(4 + sOffset, 3.5, saValue, -sbValue, -0.15, 0.15, 0.95));
            
            add(f.hyperbola(8.9, 3.5, paValue, -pbValue, -1.2, -0.3, 0.95));
            add(f.hyperbola(8.9, 3.5, paValue, -pbValue, 0.3, 1.2, 0.95));
            
            add(f.line(3.8 + sOffset, 3.65, 4.10 + sOffset, 3.65, hullLightMult));
            add(f.line(3.8 + sOffset, 3.35, 4.10 + sOffset, 3.35, hullLightMult));
            
            add(f.line(8.9, 3.8, 8.0, 3.8, hullLightMult));
            add(f.line(8.9, 3.2, 8.0, 3.2, hullLightMult));
            
            add(f.line(9.2, 3.8, 9.2, 3.2, 0.01));
            
            add(f.line(8.9, 4.7, 5.0, 4.7, hullLightMult));
            add(f.line(8.9, 2.3, 5.0, 2.3, hullLightMult));
            
            for (int i = 0; i < 10; i++)
            {
                add(f.line(i * 0.4, 2.0, i * 0.4, 2.2, hullLightMult));
                add(f.line(i * 0.4, 5.0, i * 0.4, 4.8, hullLightMult));
            }
            
        }};
      
        
        
        return list;
    }
    
    private void fillMirrorLabels(double a, double b, JLabel aLabel, JLabel bLabel, JLabel eccLabel, JLabel radiusLabel)
    {
        aLabel.setText(String.format("%.3f m", a));
        bLabel.setText(String.format("%.3f m", b));
        
        double focus = Math.sqrt(a*a + b*b);
        double ecc = focus / a;
        double radius = (focus - a) * ecc;
        
        eccLabel.setText(String.format("Excentricita: %.3f", ecc));
        radiusLabel.setText(String.format("Poloměr křivosti: %.3f m", radius));
    }
        
    private ArrayList<Element> constructWebb()
    {
        final double hullLightMult = 0.2;
        final ElementFactory f = new ElementFactory(1.0, 0.0, 14.0, 7.0);
        
        ArrayList<Element> list = new ArrayList<Element>(){{
           
            add(f.circle(2.1, 3.5, 3.0, Math.PI * 1.91, Math.PI * 0.09, 0.95));
            add(f.circle(2.05, 3.5, 3.0, Math.PI * 1.91, Math.PI * 0.09, 0.01));
            add(f.circle(5, 3.5, 6.6, Math.PI * 0.04, Math.PI * 0.15, 0.95));
            add(f.circle(5, 3.5, 6.6, Math.PI * 1.85, Math.PI * 1.96, 0.95));
            add(f.circle(5.05, 3.5, 6.6, Math.PI * 0.04, Math.PI * 0.15, 0.01));
            add(f.circle(5.05, 3.5, 6.6, Math.PI * 1.85, Math.PI * 1.96, 0.01));
            add(f.line(9, 4, 9, 3, 0.01));
        }};
      
        
        
        return list;
    }
}
